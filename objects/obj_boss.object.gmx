<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_boss1_1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0.5;

//General variables
wait = 80;
moveSpeed = -2;
currentSpeed = moveSpeed;
stopMoving = false;
aggroZone = 250;
damage = 10;
hp = 20;
phase = 1;
recoveryFrames = 30;//Recovery time when being hited phase 1 &amp; 2
recovery = 0;
invulnerabilityFrames = 35;//Invulnerability time on patterns phase 3
invulnerability = 0;
transition = false;

//Phase 1 states
strike = false;
walk = true;

//Phase 2 states

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Phase 1 : ol' weirdo walkin'
if(phase == 1){
    playerInAggroZone = obj_character.x &gt;= x - aggroZone &amp;&amp; obj_character.x &lt;= x + aggroZone;
    //When he's walking and the player is nearby
    if(playerInAggroZone &amp;&amp; walk){
        walk = false;
        strike = true;
        wait = -1;
    }
    
    //Striking pattern : walk a bit faster toward the player, attack him when close
    if(strike){
        //First time the player is in the aggro zone while a walk pattern
        if(wait == -1){
            image_xscale = behindPlayer();
            currentSpeed = (moveSpeed - 2) * behindPlayer();
            wait = 60; //Don't run forever
        }
        //If the player is close : attack then wait
        if(distance_to_point(obj_character.x, obj_character.y) &lt; 40){
            currentSpeed = 0;
            wait = 40;
        }
        
        if(wait &gt; 0){
            wait --;
        }
        else if(wait == 0){
            if (playerInAggroZone){ //If in the aggro zone : run again !
                wait = -1;
            }
            else { //If not, continue walking
                walk = true;
                currentSpeed = moveSpeed;
            }
        }
    }
    //walking around the room
    if(walk){
        if(wait &gt; 0){//The boss will stay still or walk while wait is over 0
            wait--;
        }
        else{
            if(currentSpeed != 0){//If already moving, stop moving
                currentSpeed = 0;
                wait = irandom_range(10, 40);
            }
            else{//If not moving, start moving in a random direction on a random distance
                if(irandom_range(1, 2) == 1) dir = 1
                else dir = -1;
                currentSpeed = moveSpeed * dir;
                image_xscale = dir;
                wait = irandom_range(10, 100); //Random distance range
            }
        }
    }
    
    if(hp &lt;= 0){
        walk = false;
        strike = false;
        transition = true;
        currentSpeed = 0;
        sprite_index = spr_boss1_2;
        image_index = 0;
        image_speed = 0.2;
        hp = 20;
    }
    
    if(transition){
        if(image_index &gt;= sprite_get_number(spr_boss1_2) - image_speed){
            sprite_index = spr_boss1_3;
            image_speed = 0.3;
            phase = 2;
            transition = false;
        }
    }
    
    if(place_meeting(x + hspeed, y, obj_ground01)){
        currentSpeed *= -1;
        image_xscale *= -1;
    }
    
    hspeed = currentSpeed;
}


 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hitting and being hitted
if(!transition){
    if(recovery == 0){
        touchWeapon = collision_rectangle(obj_character.x + (36 * obj_character.image_xscale),
                                          obj_character.y,
                                          obj_character.x + (78 * obj_character.image_xscale),
                                          obj_character.y + 20,
                                          id, true, false);
        if(touchWeapon &amp;&amp; obj_character.strike){
            hp -= 10;
            recovery = recoveryFrames;
        }
    }
    else{
        if(recovery % 6 &gt;= 3 &amp;&amp; recovery % 6 &lt;= 6) image_alpha = 0; 
        else image_alpha = 1;
        recovery --;
    }
    
    if(place_meeting(x, y, obj_character) &amp;&amp; !obj_character.strike){
        obj_character.hit = true;
        obj_character.ennemy = id;
        obj_character.damage = damage;
        obj_character.enemyBehind = behindPlayer();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Phase 2 : UFO
if(phase == 2){
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
