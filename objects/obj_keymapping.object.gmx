<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite98</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keymapping
//Player one keys (red)
/*
globalvar redLeftKey;
redLeftKey = vk_left;
globalvar redRightKey;
redRightKey = vk_right;
globalvar jumpKey;
jumpKey = vk_space;
globalvar strikeKey;
strikeKey = ord('S');
globalvar redShieldKey;
redShieldKey = ord('F');

//Player two keys (yel)
globalvar yelLeftKey;
yelLeftKey = vk_numpad4;
globalvar yelRightKey;
yelRightKey = vk_numpad6;
globalvar yelUpKey;
yelUpKey = vk_numpad8;
globalvar yelDownKey;
yelDownKey = vk_numpad5;
globalvar yelShieldKey;
yelShieldKey = ord('D');
globalvar gunKey;
gunKey = ord('Q');

globalvar restartKey;
restartKey = vk_space;

globalvar cheatKey;
cheatKey = vk_numpad3;
*/
//Gamepad Mapping;
globalvar redLeftKey;
redLeftKey = keyboard_check(vk_left);
globalvar redRightKey;
redRightKey = keyboard_check(vk_right);
globalvar jumpKey;
jumpKey = keyboard_check(vk_space);
globalvar strikeKey;
strikeKey = keyboard_check(ord('S'));
globalvar redShieldKey;
redShieldKey = ord('F');

//Player two keys (yel)
globalvar yelLeftKey;
yelLeftKey = keyboard_check(vk_numpad4);
globalvar yelRightKey;
yelRightKey = keyboard_check(vk_numpad6);
globalvar yelUpKey;
yelUpKey = keyboard_check(vk_numpad8);
globalvar yelDownKey;
yelDownKey = keyboard_check(vk_numpad5);
globalvar yelShieldKey;
yelShieldKey = keyboard_check(ord('D'));
globalvar gunKey;
gunKey = keyboard_check(ord('Q'));

globalvar restartKey;
restartKey = keyboard_check(vk_space);

globalvar cheatKey;
cheatKey = keyboard_check(vk_numpad3);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keymapping
/*
//Player one keys (red)
globalvar redLeftKey;
redLeftKey = keyboard_check(vk_left);
globalvar redRightKey;
redRightKey = keyboard_check(vk_right);
globalvar jumpKey;
jumpKey = keyboard_check(vk_space);
globalvar strikeKey;
strikeKey = keyboard_check(ord('S'));
globalvar redShieldKey;
redShieldKey = keyboard_check(ord('F'));

//Player two keys (yel)
globalvar yelLeftKey;
yelLeftKey = keyboard_check(vk_numpad4);
globalvar yelRightKey;
yelRightKey = keyboard_check(vk_numpad6);
globalvar yelUpKey;
yelUpKey = keyboard_check(vk_numpad8);
globalvar yelDownKey;
yelDownKey = keyboard_check(vk_numpad5);
globalvar yelShieldKey;
yelShieldKey = keyboard_check(ord('D'));
globalvar gunKey;
gunKey = keyboard_check(ord('Q'));

globalvar restartKey;
restartKey = keyboard_check(vk_space);

globalvar cheatKey;
cheatKey = keyboard_check(vk_numpad3);
*/
//Gamepad Mapping;
globalvar redLeftKey;
redLeftKey = gamepad_button_check(0, gp_padl);
globalvar redRightKey;
redRightKey = gamepad_button_check(0, gp_padr);
globalvar jumpKey;
jumpKey = gamepad_button_check(0, gp_face1);
globalvar strikeKey;
strikeKey = gamepad_button_check(0, gp_face3);
globalvar redShieldKey;
redShieldKey = gamepad_button_check(0, gp_face2);

//Player two keys (yel)
globalvar yelLeftKey;
yelLeftKey = gamepad_button_check(1, gp_padl);
globalvar yelRightKey;
yelRightKey = gamepad_button_check(1, gp_padr);
globalvar yelUpKey;
yelUpKey = gamepad_button_check(1, gp_padu);
globalvar yelDownKey;
yelDownKey = gamepad_button_check(1, gp_padd);
globalvar yelShieldKey;
yelShieldKey = gamepad_button_check(1, gp_face2);
globalvar gunKey;
gunKey = gamepad_button_check(1, gp_face1);

globalvar restartKey;
restartKey = gamepad_button_check(1, gp_face1) || gamepad_button_check(0, gp_face1);

globalvar cheatKey;
cheatKey = keyboard_check(vk_numpad3);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
