<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_yellow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Variables

globalvar gundown;
globalvar gunup;
globalvar gunleft;
    gunleft = false;
linked = true;
vsp = 0;
grav = 1;
globalvar canshoot;
    canshoot = 1;
globalvar canprotect;
    canprotect = 1;

// Else 

image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_yellow.x = obj_character.x;
obj_yellow.y = obj_character.y-80;

// Image and Animations

if (keyboard_check(vk_right)){
    image_xscale = 1;
    gunleft = false;
}

if (keyboard_check(vk_left)){
    image_xscale = -1;
    gunleft = true;
}

// ------------ Moving the Gun -----------
//----------------------------------------

// Up

if (linked){
    if (keyboard_check(vk_down)){
        gundown = true;
    }

    if (!keyboard_check(vk_down)){
        gundown = false;
    }
    if (keyboard_check(vk_up)){
        gunup = true;
    }
    if (!keyboard_check(vk_up)){
        gunup = false;
    }
    
    if (gundown = true){
        sprite_index = spr_yellow_down;
    }
    else if (gunup = true){
        sprite_index = spr_yellow_up;
    }
    else {
        sprite_index = spr_yellow;
    }
}



// ----------- Fire and Double Jump ---------------
//------------------------------------------
if (canshoot &lt;= 1){
        if (keyboard_check(vk_alt)){
        canshoot = room_speed*0.7;
        instance_create (x-14,y+29,obj_bullet);
        if (gundown = true){
            vsp = -10;
        }
    }
}
else{
    canshoot --;
}

//------------- Protect Red ----------
//------------------------------------

if (canprotect &lt;= 1){
    if (keyboard_check(vk_numpad2)){
    canprotect = room_speed*4;
    instance_create(x,y,obj_magicshield);
    }
}
else{
    canprotect--;
}

// -------------- Hit --------------------
// ---------------------------------------

if (place_meeting(x,y,obj_ennemy1)){   
    if (hit &lt;= 1) &amp;&amp; (redprotect = false){ // lorsque Yellow est touché
        life = life-10;
        hit = room_speed*0.9;
        obj_character.x = obj_character.x-80;
        obj_character.y = obj_character.y-10;
        audio_play_sound(snd_ennemy1_hit, 10, false);
    }
    if (redprotect = true){ // lorsque Red protège Yellow
        audio_play_sound(snd_shield, 10, false);
    }
}
else{
    hit --;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
