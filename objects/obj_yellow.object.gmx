<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_yellow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gunDown = false;
gunUp = false;
gunLeft = false;
grav = 1;
canShoot = 1;
canProtect = 1;
gunCooldown = room_speed * 0.7;
shieldCooldown = room_speed * 2;

image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Flicker with red

image_alpha = obj_character.image_alpha;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Follow red

x = obj_character.x;
y = obj_character.y-80;

image_xscale = obj_character.image_xscale;

gunLeft = (image_xscale == -1);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Weapon

gunDown = yelDownKey;
gunUp = yelUpKey;
gunUpRight = gunUp &amp;&amp; yelRightKey &amp;&amp; !gunLeft;
gunUpLeft = gunUp &amp;&amp; yelLeftKey &amp;&amp; gunLeft;
gunDefaultPos = !gunDown &amp;&amp; ! gunUp &amp;&amp; !gunUpRight &amp;&amp; !gunUpLeft;

if (gunDown){
    sprite_index = spr_yellow_down;
}
else if (gunUp){
    sprite_index = spr_yellow_up;
}
if(gunUpLeft || gunUpRight){
    sprite_index = spr_yellow_angle;
}
else if(gunDefaultPos){
    sprite_index = spr_yellow;
}



// ----------- Fire and Double Jump ---------------
//------------------------------------------
if (canShoot &lt;= 1){
        if (gunKey){
            canShoot = gunCooldown;
            if (image_xscale = 1){
                instance_create (x-26,y+29,obj_bullet);
            }
            if (image_xscale = -1){
                instance_create (x+28,y+29,obj_bullet);
            }
            //Can double jump after jump momentum
            if (gunDown &amp;&amp;  !gunDownRight &amp;&amp; !gunDownLeft
            &amp;&amp; obj_character.canDoubleJump &amp;&amp; obj_character.cantMove == 0){
                obj_character.vsp = -15;
                obj_character.canDoubleJump = false;
            }
        }
}
else{ //Recoil sprite after shooting and cooldown
    if(gunDefaultPos &amp;&amp; canShoot == 20) image_index = 1;
    else if(gunDefaultPos &amp;&amp; canShoot == 15) image_index = 0;
    canShoot --;

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Red protection

if (canProtect &lt;= 1){
    if (yelShieldKey){
        canProtect = shieldCooldown;
        instance_create(x,y,obj_magicshield);
    }
}
else if(canProtect &gt;= 0) {
    canProtect--;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
