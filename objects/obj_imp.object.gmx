<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_imp_fly</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>obj_ennemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
followPlayer = false;
isSpawning = false;
flying = true;
applyGravity = false;

flightDirection = behindPlayer();
image_xscale = behindPlayer();

//Flight distances
distMin = obj_character.x - 1000;
distMax = obj_character.x + view_wview * 2;

//Attack instanciation
preparingAttack = false;
aiming = false;
onSlope = false;
goDown = false;
goUp = false;
goBack = false;
recover = false;

spriteAngle = image_angle;

yMinLimit = obj_yellow.y - 100;
yMaxLimit = y;
xMinLimit = obj_yellow.x - 50 * behindPlayer();
xMaxLimit = obj_yellow.x + 500 * behindPlayer();

hspLimit = -20 * behindPlayer();
vspLimit = 16;
angleLimit = 20;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(attack){
    //Go back and forth
    if (x &gt; distMax || x &lt; distMin){
        //If it's on its way back, go faster
        if(flightDirection != behindPlayer()){
            hsp = hspLimit;
            hsp *=-1
            image_angle = 0;
            distMax = obj_character.x + view_wview * 2;
        }
        else{
            hsp = stats[0];
            sprite_index = spr_imp_fly;
            distMax = obj_character.x + view_wview * 2;
            distMin = obj_character.x - 1000;
        }
        image_xscale = behindPlayer();
        y = yMaxLimit;
    }
    
    if(vspeed == 0) onSlope = false;
    //Test the distances with the player to know in wich state we are
    if(flightDirection == behindPlayer()){
        
        //Set the distance where it will begin to attack
        xMaxLimit = obj_yellow.x + 600 * flightDirection;
        
        //if it reaches that distance, begin the attack pattern
        if(x &gt; (xMaxLimit + hsp) &amp;&amp; x &lt; (xMaxLimit - hsp) &amp;&amp; !preparingAttack
            &amp;&amp; sprite_index == spr_imp_fly){
            preparingAttack = true;
            hsp = 0;
            image_index = 0;
            sprite_index = spr_imp_start;
            image_speed = 0.4;
        }
        //When near the yellow player, stop the fall
        if(y &gt;= yMinLimit - vspeed &amp;&amp; y &lt;= yMinLimit + vspeed &amp;&amp; aiming){
            aiming = false;
        }
    }
    
    //Cracking the match
    if(preparingAttack){
        image_angle += 0.1;
    }
    //Beginnig of the fall
    if(sprite_index == spr_imp_start &amp;&amp; endAnimation()){
        hsp = -1;
        vspeed = 1;
        image_speed = 0.4;
        sprite_index = spr_imp_fire;
        aiming = true;
        preparingAttack = false;
        onSlope = true;
        yMinLimit = obj_yellow.y - 100;
    }
    
    //Falling smoothly to the player
    if(aiming){
        if(hsp &gt;= hspLimit) hsp -= 1 * behindPlayer();
        if(vspeed &lt;= vspLimit) vspeed += 2;
        else sprite_index = spr_imp_go;
        if(image_angle &lt;= angleLimit) image_angle += 2;
    }
    else if(onSlope){ //On the right position, stop falling
        if(vspeed &gt;= 0) vspeed --;
        if(image_angle &gt;= 0) image_angle -= 2;
    }
    
    //When touch the shield
    if(!goBack){
        if(touchShield() &amp;&amp; obj_character.redprotect){
            x -= hsp;
            hsp *= -1;
            recover = true;
            goBack = true;
        }
    }
    if(recover){
        if(hsp &gt; hspLimit) hsp -= 0.5;
        else if (hsp == hspLimit){
            recover = false;
            goBack = false;
        }
    }
}
if(death){
    flying = false;
    vspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///lighting
if(obj_lighting.dark) Lighting(200, c_white, c_black);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
