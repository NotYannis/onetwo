<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_deactivate_object(object_index);

isSpawning = true;
isProjectile = false;
applyGravity = true;
followPlayer = true;
facing = 1;
invulnerability = 0;

attack = true;
death = false;

damage = getEnnemyDamage();
animationSpeed = getEnnemyAnimationSpeed();
spawnSprite = getEnnemySpawnSprite();
sprite = getEnnemySprite();
deathSprite = getEnnemyDeathSprite();
hitSprite = getEnemyHitSprite();
hp = getEnnemyHp();
gunRes = getEnnemyGunRes();
hsp = getEnnemyHspeed();

image_speed = animationSpeed;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(isSpawning){
    attack = false;
    sprite_index = spawnSprite;
    image_speed = 0.2;
    if (image_index &gt;= sprite_get_number(spawnSprite) - image_speed){
        isSpawning = false;
        attack = true;
        sprite_index = sprite;
        mask_index = sprite;
        image_speed = animationSpeed;
    }
}
if (attack){
    // Se tourne et va vers le joueur.
    if(followPlayer) {
        id.image_xscale = behindPlayer();
        move_towards_point(obj_character.x, obj_character.y, hsp);
    }
    else{
        hspeed = hsp;
    }

    // -------- Gravity -------
    //-------------------------
    if(applyGravity){
        if (place_meeting(x, y + 2, obj_ground01)){
            vspeed = 0;
        }
        else{
            vspeed = 5;
        }
        //if it's on the border of precipice, stop moving
        if(place_meeting(x - (10 * behindPlayer()), y + 100, obj_water))
            hspeed = 0;
    }

    //If touched by a bullet
    if(place_meeting(x,y, obj_bullet)){
        with(obj_bullet) instance_destroy();
        audio_play_sound(snd_ennemy1_hit,10,false)
        invulnerability = 5;
        if(hp &gt; obj_character.gunDamage * gunRes &amp;&amp; gunRes != 0){
            image_blend = -1;
            sprite_index = hitSprite;
            if(!place_meeting(x + behindPlayer() * 15, y - 1, obj_ground01)){
                x += behindPlayer() * 15;
            }
            y -= 5
        }
        hp -= obj_character.gunDamage * gunRes;
    }
    
    //If touched by the chainsaw
    if((place_meeting(x,y,obj_character) &amp;&amp; obj_character.strike)
        &amp;&amp; invulnerability ==0){
        invulnerability = 8;
        if(hp &gt; obj_character.damage){
        image_blend = -1;
        sprite_index = hitSprite;
            if(!place_meeting(x + behindPlayer() * 35, y - 1, obj_ground01)){
                x += behindPlayer() * 35;
            }
            y -= 25
        }
        hp -= obj_character.damage;
        hspeed = 0;
    }
    else if(place_meeting(x,y,obj_character) //If hit the character while not attacking
             || place_meeting(x,y,obj_yellow) &amp;&amp; !obj_character.redprotect){
        obj_character.hit = true;
        obj_character.ennemy = id;
        obj_character.damage = damage;
        obj_character.enemyBehind = behindPlayer();
    }
    
    //Short invulnerability after being striked
    if(invulnerability &gt; 0){
        invulnerability--;
        hspeed = 0;
    }
    else if(object_index != obj_tentacle){
        sprite_index = sprite;
    }
    if (place_meeting(x,y,obj_water)){
        hspeed = 0;
        audio_play_sound(snd_plouf, 10, false);
        instance_destroy();
    }
   if (place_meeting(x,y, obj_magicshield)){
        if(!place_meeting(x + image_xscale * 100,y, obj_ground01)){
            x += image_xscale * 100;
        }
        y -= 20;
    }
    
    if(hp &lt;= 0) {
        death = true;
        attack = false;
        image_index = 0;
    }
}

// Death animation 
if(death){
    //object_set_mask(object_index, deathSprite);
    sprite_index = deathSprite;
    image_speed = 1;
    hspeed = 0;
    if(image_index == sprite_get_number(deathSprite) - 1){
        if(object_index == obj_zombie_tentacle){
            instance_create(x, y, obj_tentacle);
        }
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
