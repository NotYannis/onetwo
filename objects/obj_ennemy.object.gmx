<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spawn = true;
attack = true;
death = false;
damage = getEnnemyDamage();
applyGravity = true;
followPlayer = true;
animationSpeed = getEnnemyAnimationSpeed();
spawnSprite = getEnnemySpawnSprite();
sprite = getEnnemySprite();
deathSprite = getEnnemyDeathSprite();
deathSpriteIndex = getEnnemyDeathSpriteIndex();
hsp = getEnnemyHspeed();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Comportement normal si attack = true.
if(spawn){
    attack = false;
    sprite_index = spawnSprite;
    object_set_mask(object_index, spawnSprite);
    image_speed = 0.2;
    if (image_index = 11){
        spawn = false;
        attack = true;
        sprite_index = sprite;
    }   
}
if (attack){
    object_set_mask(object_index, sprite);
    
    // Se tourne et va vers le joueur.  
    if(followPlayer) {
        if (obj_character.x &lt; obj_ennemy.x){
            image_xscale = 1;
        }
        else {
            image_xscale = -1;
        }
        move_towards_point(obj_character.x, obj_character.y, hsp);
    }
    else{
        hspeed = hsp;
    }
    
    image_speed = animationSpeed;

    // -------- Gravity -------
    //-------------------------
    if(applyGravity){
        if (place_meeting(x,y+1,obj_ground01)){
            vspeed = 0;
        }
        else{
            vspeed = 5;
        }
    }
    //--------- Collision ------
    //--------------------------
   /* if ()){
        death = true;
        attack = false;
        image_index = 0;
    }*/
    if(place_meeting(x,y, obj_bullet) || (place_meeting(x,y,obj_character) &amp;&amp; strike)){
        with(obj_bullet) instance_destroy();
        audio_play_sound(snd_ennemy1_hit,10,false)
        death = true;
        attack = false;
        image_index = 0;
    }
    
    if (place_meeting(x,y,obj_water)){
        hspeed = 0;
        audio_play_sound(snd_plouf, 10, false);
        instance_destroy();
    }
    
    if (place_meeting(x,y, obj_magicshield)){
       if(!place_meeting(x + image_xscale * 100,y, obj_ground01)){
            x += image_xscale * 100;
        }
        y -= 20;
    }
    
    // Death animation 
}
if(death){
    object_set_mask(object_index, deathSprite);
    sprite_index = deathSprite;
    image_speed = 1;
    hspeed = 0;
    if (image_index &gt;= deathSpriteIndex){
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
