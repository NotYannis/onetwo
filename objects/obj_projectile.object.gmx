<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>followPlayer = true;
isSpawning = false;
aiming = false;
falling = false;

stats = getEnemyStat()
hsp = stats[0];
damage = stats[3];
vsp = stats[4];

xStartPos = x;
stay = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(isSpawning){ //If spawn, move a bit towards the direction of the player
    if(behindPlayer() &lt; 0 &amp;&amp; x - xStartPos &lt;= 20){
        x += hsp/2;
    }
    else if(behindPlayer() &gt; 0 &amp;&amp; xStartPos - x &lt;= 20){
        x -= hsp/2;
    }
    else{
        stay--
    }
    if(stay == 0) isSpawning = false;

}
else{
    if(aiming){ //Move in the direction of the player
        motion_add(point_direction(x, y, obj_character.x, obj_character.y), hsp);
        aiming = false;
    }
    if(!followPlayer){//or just move horizontally
        hspeed = hsp;
        if(falling){
            vspeed = vsp;
        }
    }
    
    //If thouches the player, make some damage
    if(place_meeting(x,y,obj_character)
        || (place_meeting(x,y,obj_yellow) &amp;&amp; !obj_character.redprotect)){
        obj_character.hit = true;
        obj_character.ennemy = id;
        obj_character.damage = damage;
        obj_character.enemyBehind = behindPlayer();
        instance_destroy();
    }
    //If touches the player when protected
    if(place_meeting(x,y, obj_magicshield)
       || (place_meeting(x,y, obj_yellow) &amp;&amp; obj_character.redprotect)){
        audio_play_sound(snd_shield, 0, false);
        instance_destroy();
    }
    
    //If touches the ground or out of the view
    if(place_meeting(x, y, obj_ground01)
        || x &lt; view_xview || x &gt; view_xview + view_wview
        || y &lt; view_yview || y &gt; view_yview + view_hview){
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
