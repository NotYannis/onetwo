<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_crow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_ennemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
followPlayer = false;
isSpawning = false;
flying = true;
applyGravity = false;

goRight = true;
image_xscale = behindPlayer();

//Flight distances
distMin = -50;
distMax = room_width + 50;

//Attack instanciation
onSlope = false;
goDown = false;
goUp = false;

spriteAngle = image_angle;

yMinLimit = obj_yellow.y + 50;
yMaxLimit = y;
xMinLimit = obj_yellow.x - 50 * behindPlayer();
xMaxLimit = obj_yellow.x + 500 * behindPlayer();

speedLimit = 15 * behindPlayer();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(attack){
    if (x &gt;= distMax || x &lt;= distMin){//Go back and forth
        hsp *=-1
        image_xscale *= -1;
    }
    
    //Going down
    if(!goDown) xMaxLimit = obj_yellow.x + 500 * behindPlayer();
    if(x &gt; xMaxLimit + hsp &amp;&amp; x &lt; xMaxLimit - hsp){
        vspeed = 15;
        goDown = true;
    }
    if(y &gt;= yMinLimit - vspeed &amp;&amp; y &lt;= yMinLimit + vspeed &amp;&amp; goDown){
        vspeed = 0;
        goDown = false;
    }
    
    //Going up
    if(!goUp &amp;&amp; goDown){
        xMinLimit = obj_yellow.x - 50 * behindPlayer();
    }

    show_debug_message(hsp * behindPlayer());
    if(x &gt; xMinLimit - (hsp * behindPlayer()) &amp;&amp; x &lt; xMinLimit + (hsp * behindPlayer())){
        vspeed = -15;
        goUp = true;
    }
    if(y &gt;= yMaxLimit + vspeed &amp;&amp; y &lt;= yMaxLimit - vspeed &amp;&amp; goUp){
        vspeed = 0;
        goUp = false;
    }
}

if(obj_lighting.dark) Lighting(200, c_white, c_black);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
